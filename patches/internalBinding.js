const { SafeMap } = primordials;
// For debug logging
var quote = [];
var loaded = false;
var debugLog;
var debug = (...args) => (loaded ? debugLog(...args) : quote.push(args));
// prettier-ignore
var uvDUMP = {"UV_E2BIG":-7,"UV_EACCES":-13,"UV_EADDRINUSE":-98,"UV_EADDRNOTAVAIL":-99,"UV_EAFNOSUPPORT":-97,"UV_EAGAIN":-11,"UV_EAI_ADDRFAMILY":-3000,"UV_EAI_AGAIN":-3001,"UV_EAI_BADFLAGS":-3002,"UV_EAI_BADHINTS":-3013,"UV_EAI_CANCELED":-3003,"UV_EAI_FAIL":-3004,"UV_EAI_FAMILY":-3005,"UV_EAI_MEMORY":-3006,"UV_EAI_NODATA":-3007,"UV_EAI_NONAME":-3008,"UV_EAI_OVERFLOW":-3009,"UV_EAI_PROTOCOL":-3014,"UV_EAI_SERVICE":-3010,"UV_EAI_SOCKTYPE":-3011,"UV_EALREADY":-114,"UV_EBADF":-9,"UV_EBUSY":-16,"UV_ECANCELED":-125,"UV_ECHARSET":-4080,"UV_ECONNABORTED":-103,"UV_ECONNREFUSED":-111,"UV_ECONNRESET":-104,"UV_EDESTADDRREQ":-89,"UV_EEXIST":-17,"UV_EFAULT":-14,"UV_EFBIG":-27,"UV_EHOSTUNREACH":-113,"UV_EINTR":-4,"UV_EINVAL":-22,"UV_EIO":-5,"UV_EISCONN":-106,"UV_EISDIR":-21,"UV_ELOOP":-40,"UV_EMFILE":-24,"UV_EMSGSIZE":-90,"UV_ENAMETOOLONG":-36,"UV_ENETDOWN":-100,"UV_ENETUNREACH":-101,"UV_ENFILE":-23,"UV_ENOBUFS":-105,"UV_ENODEV":-19,"UV_ENOENT":-2,"UV_ENOMEM":-12,"UV_ENONET":-64,"UV_ENOPROTOOPT":-92,"UV_ENOSPC":-28,"UV_ENOSYS":-38,"UV_ENOTCONN":-107,"UV_ENOTDIR":-20,"UV_ENOTEMPTY":-39,"UV_ENOTSOCK":-88,"UV_ENOTSUP":-95,"UV_EOVERFLOW":-75,"UV_EPERM":-1,"UV_EPIPE":-32,"UV_EPROTO":-71,"UV_EPROTONOSUPPORT":-93,"UV_EPROTOTYPE":-91,"UV_ERANGE":-34,"UV_EROFS":-30,"UV_ESHUTDOWN":-108,"UV_ESPIPE":-29,"UV_ESRCH":-3,"UV_ETIMEDOUT":-110,"UV_ETXTBSY":-26,"UV_EXDEV":-18,"UV_UNKNOWN":-4094,"UV_EOF":-4095,"UV_ENXIO":-6,"UV_EMLINK":-31,"UV_EHOSTDOWN":-112,"UV_EREMOTEIO":-121,"UV_ENOTTY":-25,"UV_EFTYPE":-4028,"UV_EILSEQ":-84,"UV_ESOCKTNOSUPPORT":-94,"UV_ENODATA":-61,"UV_EUNATCH":-49,"codeDump":{"-1":"EPERM","-2":"ENOENT","-3":"ESRCH","-4":"EINTR","-5":"EIO","-6":"ENXIO","-7":"E2BIG","-9":"EBADF","-11":"EAGAIN","-12":"ENOMEM","-13":"EACCES","-14":"EFAULT","-16":"EBUSY","-17":"EEXIST","-18":"EXDEV","-19":"ENODEV","-20":"ENOTDIR","-21":"EISDIR","-22":"EINVAL","-23":"ENFILE","-24":"EMFILE","-25":"ENOTTY","-26":"ETXTBSY","-27":"EFBIG","-28":"ENOSPC","-29":"ESPIPE","-30":"EROFS","-31":"EMLINK","-32":"EPIPE","-34":"ERANGE","-36":"ENAMETOOLONG","-38":"ENOSYS","-39":"ENOTEMPTY","-40":"ELOOP","-49":"EUNATCH","-61":"ENODATA","-64":"ENONET","-71":"EPROTO","-75":"EOVERFLOW","-84":"EILSEQ","-88":"ENOTSOCK","-89":"EDESTADDRREQ","-90":"EMSGSIZE","-91":"EPROTOTYPE","-92":"ENOPROTOOPT","-93":"EPROTONOSUPPORT","-94":"ESOCKTNOSUPPORT","-95":"ENOTSUP","-97":"EAFNOSUPPORT","-98":"EADDRINUSE","-99":"EADDRNOTAVAIL","-100":"ENETDOWN","-101":"ENETUNREACH","-103":"ECONNABORTED","-104":"ECONNRESET","-105":"ENOBUFS","-106":"EISCONN","-107":"ENOTCONN","-108":"ESHUTDOWN","-110":"ETIMEDOUT","-111":"ECONNREFUSED","-112":"EHOSTDOWN","-113":"EHOSTUNREACH","-114":"EALREADY","-121":"EREMOTEIO","-125":"ECANCELED"}};
// prettier-ignore
var symbolDUMP = {"fs_use_promises_symbol":Symbol("fs_use_promises_symbol"),"async_id_symbol":Symbol("async_id_symbol"),"handle_onclose":Symbol("handle_onclose"),"no_message_symbol":Symbol("no_message_symbol"),"messaging_deserialize_symbol":Symbol("messaging_deserialize_symbol"),"messaging_transfer_symbol":Symbol("messaging_transfer_symbol"),"messaging_clone_symbol":Symbol("messaging_clone_symbol"),"messaging_transfer_list_symbol":Symbol("messaging_transfer_list_symbol"),"oninit":Symbol("oninit"),"owner_symbol":Symbol("owner_symbol"),"onpskexchange":Symbol("onpskexchange"),"resource_symbol":Symbol("resource_symbol"),"trigger_async_id_symbol":Symbol("trigger_async_id_symbol"),"vm_dynamic_import_default_internal":Symbol("vm_dynamic_import_default_internal"),"vm_dynamic_import_main_context_default":Symbol("vm_dynamic_import_main_context_default"),"vm_dynamic_import_missing_flag":Symbol("vm_dynamic_import_missing_flag"),"vm_dynamic_import_no_callback":Symbol("vm_dynamic_import_no_callback")};
// prettier-ignore
var constants = {"os":{"UV_UDP_REUSEADDR":4,"dlopen":{"RTLD_LAZY":1,"RTLD_NOW":2,"RTLD_GLOBAL":256,"RTLD_LOCAL":0,"RTLD_DEEPBIND":8},"errno":{"E2BIG":7,"EACCES":13,"EADDRINUSE":98,"EADDRNOTAVAIL":99,"EAFNOSUPPORT":97,"EAGAIN":11,"EALREADY":114,"EBADF":9,"EBADMSG":74,"EBUSY":16,"ECANCELED":125,"ECHILD":10,"ECONNABORTED":103,"ECONNREFUSED":111,"ECONNRESET":104,"EDEADLK":35,"EDESTADDRREQ":89,"EDOM":33,"EDQUOT":122,"EEXIST":17,"EFAULT":14,"EFBIG":27,"EHOSTUNREACH":113,"EIDRM":43,"EILSEQ":84,"EINPROGRESS":115,"EINTR":4,"EINVAL":22,"EIO":5,"EISCONN":106,"EISDIR":21,"ELOOP":40,"EMFILE":24,"EMLINK":31,"EMSGSIZE":90,"EMULTIHOP":72,"ENAMETOOLONG":36,"ENETDOWN":100,"ENETRESET":102,"ENETUNREACH":101,"ENFILE":23,"ENOBUFS":105,"ENODATA":61,"ENODEV":19,"ENOENT":2,"ENOEXEC":8,"ENOLCK":37,"ENOLINK":67,"ENOMEM":12,"ENOMSG":42,"ENOPROTOOPT":92,"ENOSPC":28,"ENOSR":63,"ENOSTR":60,"ENOSYS":38,"ENOTCONN":107,"ENOTDIR":20,"ENOTEMPTY":39,"ENOTSOCK":88,"ENOTSUP":95,"ENOTTY":25,"ENXIO":6,"EOPNOTSUPP":95,"EOVERFLOW":75,"EPERM":1,"EPIPE":32,"EPROTO":71,"EPROTONOSUPPORT":93,"EPROTOTYPE":91,"ERANGE":34,"EROFS":30,"ESPIPE":29,"ESRCH":3,"ESTALE":116,"ETIME":62,"ETIMEDOUT":110,"ETXTBSY":26,"EWOULDBLOCK":11,"EXDEV":18},"signals":{"SIGHUP":1,"SIGINT":2,"SIGQUIT":3,"SIGILL":4,"SIGTRAP":5,"SIGABRT":6,"SIGIOT":6,"SIGBUS":7,"SIGFPE":8,"SIGKILL":9,"SIGUSR1":10,"SIGSEGV":11,"SIGUSR2":12,"SIGPIPE":13,"SIGALRM":14,"SIGTERM":15,"SIGCHLD":17,"SIGSTKFLT":16,"SIGCONT":18,"SIGSTOP":19,"SIGTSTP":20,"SIGTTIN":21,"SIGTTOU":22,"SIGURG":23,"SIGXCPU":24,"SIGXFSZ":25,"SIGVTALRM":26,"SIGPROF":27,"SIGWINCH":28,"SIGIO":29,"SIGPOLL":29,"SIGPWR":30,"SIGSYS":31},"priority":{"PRIORITY_LOW":19,"PRIORITY_BELOW_NORMAL":10,"PRIORITY_NORMAL":0,"PRIORITY_ABOVE_NORMAL":-7,"PRIORITY_HIGH":-14,"PRIORITY_HIGHEST":-20}},"fs":{"UV_FS_SYMLINK_DIR":1,"UV_FS_SYMLINK_JUNCTION":2,"O_RDONLY":0,"O_WRONLY":1,"O_RDWR":2,"UV_DIRENT_UNKNOWN":0,"UV_DIRENT_FILE":1,"UV_DIRENT_DIR":2,"UV_DIRENT_LINK":3,"UV_DIRENT_FIFO":4,"UV_DIRENT_SOCKET":5,"UV_DIRENT_CHAR":6,"UV_DIRENT_BLOCK":7,"EXTENSIONLESS_FORMAT_JAVASCRIPT":0,"EXTENSIONLESS_FORMAT_WASM":1,"S_IFMT":61440,"S_IFREG":32768,"S_IFDIR":16384,"S_IFCHR":8192,"S_IFBLK":24576,"S_IFIFO":4096,"S_IFLNK":40960,"S_IFSOCK":49152,"O_CREAT":64,"O_EXCL":128,"UV_FS_O_FILEMAP":0,"O_NOCTTY":256,"O_TRUNC":512,"O_APPEND":1024,"O_DIRECTORY":65536,"O_NOATIME":262144,"O_NOFOLLOW":131072,"O_SYNC":1052672,"O_DSYNC":4096,"O_DIRECT":16384,"O_NONBLOCK":2048,"S_IRWXU":448,"S_IRUSR":256,"S_IWUSR":128,"S_IXUSR":64,"S_IRWXG":56,"S_IRGRP":32,"S_IWGRP":16,"S_IXGRP":8,"S_IRWXO":7,"S_IROTH":4,"S_IWOTH":2,"S_IXOTH":1,"F_OK":0,"R_OK":4,"W_OK":2,"X_OK":1,"UV_FS_COPYFILE_EXCL":1,"COPYFILE_EXCL":1,"UV_FS_COPYFILE_FICLONE":2,"COPYFILE_FICLONE":2,"UV_FS_COPYFILE_FICLONE_FORCE":4,"COPYFILE_FICLONE_FORCE":4},"crypto":{"OPENSSL_VERSION_NUMBER":805306576,"SSL_OP_ALL":2147485776,"SSL_OP_ALLOW_NO_DHE_KEX":1024,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION":262144,"SSL_OP_CIPHER_SERVER_PREFERENCE":4194304,"SSL_OP_CISCO_ANYCONNECT":32768,"SSL_OP_COOKIE_EXCHANGE":8192,"SSL_OP_CRYPTOPRO_TLSEXT_BUG":2147483648,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS":2048,"SSL_OP_LEGACY_SERVER_CONNECT":4,"SSL_OP_NO_COMPRESSION":131072,"SSL_OP_NO_ENCRYPT_THEN_MAC":524288,"SSL_OP_NO_QUERY_MTU":4096,"SSL_OP_NO_RENEGOTIATION":1073741824,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION":65536,"SSL_OP_NO_SSLv2":0,"SSL_OP_NO_SSLv3":33554432,"SSL_OP_NO_TICKET":16384,"SSL_OP_NO_TLSv1":67108864,"SSL_OP_NO_TLSv1_1":268435456,"SSL_OP_NO_TLSv1_2":134217728,"SSL_OP_NO_TLSv1_3":536870912,"SSL_OP_PRIORITIZE_CHACHA":2097152,"SSL_OP_TLS_ROLLBACK_BUG":8388608,"ENGINE_METHOD_RSA":1,"ENGINE_METHOD_DSA":2,"ENGINE_METHOD_DH":4,"ENGINE_METHOD_RAND":8,"ENGINE_METHOD_EC":2048,"ENGINE_METHOD_CIPHERS":64,"ENGINE_METHOD_DIGESTS":128,"ENGINE_METHOD_PKEY_METHS":512,"ENGINE_METHOD_PKEY_ASN1_METHS":1024,"ENGINE_METHOD_ALL":65535,"ENGINE_METHOD_NONE":0,"DH_CHECK_P_NOT_SAFE_PRIME":2,"DH_CHECK_P_NOT_PRIME":1,"DH_UNABLE_TO_CHECK_GENERATOR":4,"DH_NOT_SUITABLE_GENERATOR":8,"RSA_PKCS1_PADDING":1,"RSA_NO_PADDING":3,"RSA_PKCS1_OAEP_PADDING":4,"RSA_X931_PADDING":5,"RSA_PKCS1_PSS_PADDING":6,"RSA_PSS_SALTLEN_DIGEST":-1,"RSA_PSS_SALTLEN_MAX_SIGN":-2,"RSA_PSS_SALTLEN_AUTO":-2,"defaultCoreCipherList":"TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA","TLS1_VERSION":769,"TLS1_1_VERSION":770,"TLS1_2_VERSION":771,"TLS1_3_VERSION":772,"POINT_CONVERSION_COMPRESSED":2,"POINT_CONVERSION_UNCOMPRESSED":4,"POINT_CONVERSION_HYBRID":6},"zlib":{"Z_NO_FLUSH":0,"Z_PARTIAL_FLUSH":1,"Z_SYNC_FLUSH":2,"Z_FULL_FLUSH":3,"Z_FINISH":4,"Z_BLOCK":5,"Z_OK":0,"Z_STREAM_END":1,"Z_NEED_DICT":2,"Z_ERRNO":-1,"Z_STREAM_ERROR":-2,"Z_DATA_ERROR":-3,"Z_MEM_ERROR":-4,"Z_BUF_ERROR":-5,"Z_VERSION_ERROR":-6,"Z_NO_COMPRESSION":0,"Z_BEST_SPEED":1,"Z_BEST_COMPRESSION":9,"Z_DEFAULT_COMPRESSION":-1,"Z_FILTERED":1,"Z_HUFFMAN_ONLY":2,"Z_RLE":3,"Z_FIXED":4,"Z_DEFAULT_STRATEGY":0,"ZLIB_VERNUM":4865,"DEFLATE":1,"INFLATE":2,"GZIP":3,"GUNZIP":4,"DEFLATERAW":5,"INFLATERAW":6,"UNZIP":7,"BROTLI_DECODE":8,"BROTLI_ENCODE":9,"Z_MIN_WINDOWBITS":8,"Z_MAX_WINDOWBITS":15,"Z_DEFAULT_WINDOWBITS":15,"Z_MIN_CHUNK":64,"Z_MAX_CHUNK":null,"Z_DEFAULT_CHUNK":16384,"Z_MIN_MEMLEVEL":1,"Z_MAX_MEMLEVEL":9,"Z_DEFAULT_MEMLEVEL":8,"Z_MIN_LEVEL":-1,"Z_MAX_LEVEL":9,"Z_DEFAULT_LEVEL":-1,"BROTLI_OPERATION_PROCESS":0,"BROTLI_OPERATION_FLUSH":1,"BROTLI_OPERATION_FINISH":2,"BROTLI_OPERATION_EMIT_METADATA":3,"BROTLI_PARAM_MODE":0,"BROTLI_MODE_GENERIC":0,"BROTLI_MODE_TEXT":1,"BROTLI_MODE_FONT":2,"BROTLI_DEFAULT_MODE":0,"BROTLI_PARAM_QUALITY":1,"BROTLI_MIN_QUALITY":0,"BROTLI_MAX_QUALITY":11,"BROTLI_DEFAULT_QUALITY":11,"BROTLI_PARAM_LGWIN":2,"BROTLI_MIN_WINDOW_BITS":10,"BROTLI_MAX_WINDOW_BITS":24,"BROTLI_LARGE_MAX_WINDOW_BITS":30,"BROTLI_DEFAULT_WINDOW":22,"BROTLI_PARAM_LGBLOCK":3,"BROTLI_MIN_INPUT_BLOCK_BITS":16,"BROTLI_MAX_INPUT_BLOCK_BITS":24,"BROTLI_PARAM_DISABLE_LITERAL_CONTEXT_MODELING":4,"BROTLI_PARAM_SIZE_HINT":5,"BROTLI_PARAM_LARGE_WINDOW":6,"BROTLI_PARAM_NPOSTFIX":7,"BROTLI_PARAM_NDIRECT":8,"BROTLI_DECODER_RESULT_ERROR":0,"BROTLI_DECODER_RESULT_SUCCESS":1,"BROTLI_DECODER_RESULT_NEEDS_MORE_INPUT":2,"BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT":3,"BROTLI_DECODER_PARAM_DISABLE_RING_BUFFER_REALLOCATION":0,"BROTLI_DECODER_PARAM_LARGE_WINDOW":1,"BROTLI_DECODER_NO_ERROR":0,"BROTLI_DECODER_SUCCESS":1,"BROTLI_DECODER_NEEDS_MORE_INPUT":2,"BROTLI_DECODER_NEEDS_MORE_OUTPUT":3,"BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_NIBBLE":-1,"BROTLI_DECODER_ERROR_FORMAT_RESERVED":-2,"BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_META_NIBBLE":-3,"BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_ALPHABET":-4,"BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_SAME":-5,"BROTLI_DECODER_ERROR_FORMAT_CL_SPACE":-6,"BROTLI_DECODER_ERROR_FORMAT_HUFFMAN_SPACE":-7,"BROTLI_DECODER_ERROR_FORMAT_CONTEXT_MAP_REPEAT":-8,"BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_1":-9,"BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_2":-10,"BROTLI_DECODER_ERROR_FORMAT_TRANSFORM":-11,"BROTLI_DECODER_ERROR_FORMAT_DICTIONARY":-12,"BROTLI_DECODER_ERROR_FORMAT_WINDOW_BITS":-13,"BROTLI_DECODER_ERROR_FORMAT_PADDING_1":-14,"BROTLI_DECODER_ERROR_FORMAT_PADDING_2":-15,"BROTLI_DECODER_ERROR_FORMAT_DISTANCE":-16,"BROTLI_DECODER_ERROR_DICTIONARY_NOT_SET":-19,"BROTLI_DECODER_ERROR_INVALID_ARGUMENTS":-20,"BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MODES":-21,"BROTLI_DECODER_ERROR_ALLOC_TREE_GROUPS":-22,"BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MAP":-25,"BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_1":-26,"BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_2":-27,"BROTLI_DECODER_ERROR_ALLOC_BLOCK_TYPE_TREES":-30,"BROTLI_DECODER_ERROR_UNREACHABLE":-31},"trace":{"TRACE_EVENT_PHASE_BEGIN":66,"TRACE_EVENT_PHASE_END":69,"TRACE_EVENT_PHASE_COMPLETE":88,"TRACE_EVENT_PHASE_INSTANT":73,"TRACE_EVENT_PHASE_ASYNC_BEGIN":83,"TRACE_EVENT_PHASE_ASYNC_STEP_INTO":84,"TRACE_EVENT_PHASE_ASYNC_STEP_PAST":112,"TRACE_EVENT_PHASE_ASYNC_END":70,"TRACE_EVENT_PHASE_NESTABLE_ASYNC_BEGIN":98,"TRACE_EVENT_PHASE_NESTABLE_ASYNC_END":101,"TRACE_EVENT_PHASE_NESTABLE_ASYNC_INSTANT":110,"TRACE_EVENT_PHASE_FLOW_BEGIN":115,"TRACE_EVENT_PHASE_FLOW_STEP":116,"TRACE_EVENT_PHASE_FLOW_END":102,"TRACE_EVENT_PHASE_METADATA":77,"TRACE_EVENT_PHASE_COUNTER":67,"TRACE_EVENT_PHASE_SAMPLE":80,"TRACE_EVENT_PHASE_CREATE_OBJECT":78,"TRACE_EVENT_PHASE_SNAPSHOT_OBJECT":79,"TRACE_EVENT_PHASE_DELETE_OBJECT":68,"TRACE_EVENT_PHASE_MEMORY_DUMP":118,"TRACE_EVENT_PHASE_MARK":82,"TRACE_EVENT_PHASE_CLOCK_SYNC":99,"TRACE_EVENT_PHASE_ENTER_CONTEXT":40,"TRACE_EVENT_PHASE_LEAVE_CONTEXT":41,"TRACE_EVENT_PHASE_LINK_IDS":61}};
// prettier-ignore
var preformanceDUMP = {"milestones":[1723219357529617,5604125829690,5604144432621,5604126720908,5604133550778,5604215229560,-1,5604177314187],"constants":{"NODE_PERFORMANCE_GC_MAJOR":4,"NODE_PERFORMANCE_GC_MINOR":1,"NODE_PERFORMANCE_GC_INCREMENTAL":8,"NODE_PERFORMANCE_GC_WEAKCB":16,"NODE_PERFORMANCE_GC_FLAGS_NO":0,"NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED":2,"NODE_PERFORMANCE_GC_FLAGS_FORCED":4,"NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING":8,"NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE":16,"NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY":32,"NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE":64}};
// prettier-ignore
var builtinIdsDUMP = ["_http_agent","_http_client","_http_common","_http_incoming","_http_outgoing","_http_server","_stream_duplex","_stream_passthrough","_stream_readable","_stream_transform","_stream_wrap","_stream_writable","_tls_common","_tls_wrap","assert","assert/strict","async_hooks","buffer","child_process","cluster","console","constants","crypto","dgram","diagnostics_channel","dns","dns/promises","domain","events","fs","fs/promises","http","http2","https","inspector","inspector/promises","internal/abort_controller","internal/assert","internal/assert/assertion_error","internal/assert/calltracker","internal/async_hooks","internal/blob","internal/blocklist","internal/bootstrap/node","internal/bootstrap/realm","internal/bootstrap/shadow_realm","internal/bootstrap/switches/does_not_own_process_state","internal/bootstrap/switches/does_own_process_state","internal/bootstrap/switches/is_main_thread","internal/bootstrap/switches/is_not_main_thread","internal/bootstrap/web/exposed-wildcard","internal/bootstrap/web/exposed-window-or-worker","internal/buffer","internal/child_process","internal/child_process/serialization","internal/cli_table","internal/cluster/child","internal/cluster/primary","internal/cluster/round_robin_handle","internal/cluster/shared_handle","internal/cluster/utils","internal/cluster/worker","internal/console/constructor","internal/console/global","internal/constants","internal/crypto/aes","internal/crypto/certificate","internal/crypto/cfrg","internal/crypto/cipher","internal/crypto/diffiehellman","internal/crypto/ec","internal/crypto/hash","internal/crypto/hashnames","internal/crypto/hkdf","internal/crypto/keygen","internal/crypto/keys","internal/crypto/mac","internal/crypto/pbkdf2","internal/crypto/random","internal/crypto/rsa","internal/crypto/scrypt","internal/crypto/sig","internal/crypto/util","internal/crypto/webcrypto","internal/crypto/webidl","internal/crypto/x509","internal/debugger/inspect","internal/debugger/inspect_client","internal/debugger/inspect_repl","internal/deps/acorn/acorn-walk/dist/walk","internal/deps/acorn/acorn/dist/acorn","internal/deps/cjs-module-lexer/dist/lexer","internal/deps/cjs-module-lexer/lexer","internal/deps/minimatch/index","internal/deps/undici/undici","internal/deps/v8/tools/arguments","internal/deps/v8/tools/codemap","internal/deps/v8/tools/consarray","internal/deps/v8/tools/csvparser","internal/deps/v8/tools/logreader","internal/deps/v8/tools/profile","internal/deps/v8/tools/profile_view","internal/deps/v8/tools/sourcemap","internal/deps/v8/tools/splaytree","internal/deps/v8/tools/tickprocessor","internal/deps/v8/tools/tickprocessor-driver","internal/dgram","internal/dns/callback_resolver","internal/dns/promises","internal/dns/utils","internal/encoding","internal/error_serdes","internal/errors","internal/event_target","internal/events/abort_listener","internal/events/symbols","internal/file","internal/fixed_queue","internal/freelist","internal/freeze_intrinsics","internal/fs/cp/cp","internal/fs/cp/cp-sync","internal/fs/dir","internal/fs/promises","internal/fs/read/context","internal/fs/recursive_watch","internal/fs/rimraf","internal/fs/streams","internal/fs/sync_write_stream","internal/fs/utils","internal/fs/watchers","internal/heap_utils","internal/histogram","internal/http","internal/http2/compat","internal/http2/core","internal/http2/util","internal/idna","internal/inspector_async_hook","internal/js_stream_socket","internal/legacy/processbinding","internal/linkedlist","internal/main/check_syntax","internal/main/embedding","internal/main/eval_stdin","internal/main/eval_string","internal/main/inspect","internal/main/mksnapshot","internal/main/print_help","internal/main/prof_process","internal/main/repl","internal/main/run_main_module","internal/main/test_runner","internal/main/watch_mode","internal/main/worker_thread","internal/mime","internal/modules/cjs/loader","internal/modules/esm/assert","internal/modules/esm/create_dynamic_module","internal/modules/esm/fetch_module","internal/modules/esm/formats","internal/modules/esm/get_format","internal/modules/esm/hooks","internal/modules/esm/initialize_import_meta","internal/modules/esm/load","internal/modules/esm/loader","internal/modules/esm/module_job","internal/modules/esm/module_map","internal/modules/esm/package_config","internal/modules/esm/resolve","internal/modules/esm/shared_constants","internal/modules/esm/translators","internal/modules/esm/utils","internal/modules/esm/worker","internal/modules/helpers","internal/modules/package_json_reader","internal/modules/run_main","internal/navigator","internal/net","internal/options","internal/per_context/domexception","internal/per_context/messageport","internal/per_context/primordials","internal/perf/event_loop_delay","internal/perf/event_loop_utilization","internal/perf/nodetiming","internal/perf/observe","internal/perf/performance","internal/perf/performance_entry","internal/perf/resource_timing","internal/perf/timerify","internal/perf/usertiming","internal/perf/utils","internal/policy/manifest","internal/policy/sri","internal/priority_queue","internal/process/execution","internal/process/per_thread","internal/process/permission","internal/process/policy","internal/process/pre_execution","internal/process/promises","internal/process/report","internal/process/signal","internal/process/task_queues","internal/process/warning","internal/process/worker_thread_only","internal/promise_hooks","internal/querystring","internal/readline/callbacks","internal/readline/emitKeypressEvents","internal/readline/interface","internal/readline/promises","internal/readline/utils","internal/repl","internal/repl/await","internal/repl/history","internal/repl/utils","internal/socket_list","internal/socketaddress","internal/source_map/prepare_stack_trace","internal/source_map/source_map","internal/source_map/source_map_cache","internal/stream_base_commons","internal/streams/add-abort-signal","internal/streams/compose","internal/streams/destroy","internal/streams/duplex","internal/streams/duplexify","internal/streams/end-of-stream","internal/streams/from","internal/streams/lazy_transform","internal/streams/legacy","internal/streams/operators","internal/streams/passthrough","internal/streams/pipeline","internal/streams/readable","internal/streams/state","internal/streams/transform","internal/streams/utils","internal/streams/writable","internal/test/binding","internal/test/transfer","internal/test_runner/coverage","internal/test_runner/harness","internal/test_runner/mock/mock","internal/test_runner/mock/mock_timers","internal/test_runner/reporter/dot","internal/test_runner/reporter/junit","internal/test_runner/reporter/lcov","internal/test_runner/reporter/spec","internal/test_runner/reporter/tap","internal/test_runner/reporter/v8-serializer","internal/test_runner/runner","internal/test_runner/test","internal/test_runner/tests_stream","internal/test_runner/utils","internal/timers","internal/tls/secure-context","internal/tls/secure-pair","internal/trace_events_async_hooks","internal/tty","internal/url","internal/util","internal/util/colors","internal/util/comparisons","internal/util/debuglog","internal/util/embedding","internal/util/inspect","internal/util/inspector","internal/util/iterable_weak_map","internal/util/parse_args/parse_args","internal/util/parse_args/utils","internal/util/types","internal/v8/startup_snapshot","internal/v8_prof_polyfill","internal/v8_prof_processor","internal/validators","internal/vm","internal/vm/module","internal/wasm_web_api","internal/watch_mode/files_watcher","internal/watchdog","internal/webidl","internal/webstreams/adapters","internal/webstreams/compression","internal/webstreams/encoding","internal/webstreams/queuingstrategies","internal/webstreams/readablestream","internal/webstreams/transfer","internal/webstreams/transformstream","internal/webstreams/util","internal/webstreams/writablestream","internal/worker","internal/worker/io","internal/worker/js_transferable","module","net","os","path","path/posix","path/win32","perf_hooks","process","punycode","querystring","readline","readline/promises","repl","sea","stream","stream/consumers","stream/promises","stream/web","string_decoder","sys","test","test/reporters","timers","timers/promises","tls","trace_events","tty","url","util","util/types","v8","vm","wasi","worker_threads","zlib"];
// prettier-ignore
var optionsDump = {"getCLIOptionsValues":() => { return {"--run":"","--experimental-sea-config":"","--no-extra-info-on-fatal-exception":false,"--extra-info-on-fatal-exception":true,"--no-trace-warnings":true,"--trace-warnings":false,"--no-experimental-test-snapshots":true,"--experimental-test-snapshots":false,"--nohas_env_file_string]":true,"[has_env_file_string]":false,"--no-prof-process":true,"--prof-process":false,"--no-trace-tls":true,"--trace-tls":false,"--no-trace-exit":true,"--trace-exit":false,"--no-throw-deprecation":true,"--throw-deprecation":false,"--no-tls-min-v1.0":true,"--tls-min-v1.0":false,"--no-inspect-brk-node":true,"--inspect-brk-node":false,"--test-name-pattern":[],"--no-experimental-test-module-mocks":true,"--experimental-test-module-mocks":false,"--no-experimental-test-coverage":true,"--experimental-test-coverage":false,"--no-test-update-snapshots":true,"--test-update-snapshots":false,"--test-timeout":0,"--test-concurrency":0,"--max-http-header-size":16384,"--redirect-warnings":"","--no-heap-prof":true,"--heap-prof":false,"--test-coverage-include":[],"--env-file":"","--no-experimental-network-inspection":true,"--experimental-network-inspection":false,"--cpu-prof-dir":"","--no-report-on-signal":true,"--report-on-signal":false,"--heap-prof-interval":524288,"--cpu-prof-interval":1000,"--no-allow-child-process":true,"--allow-child-process":false,"--no-trace-promises":true,"--trace-promises":false,"--no-experimental-import-meta-resolve":true,"--experimental-import-meta-resolve":false,"--test-skip-pattern":[],"--heapsnapshot-signal":"","--no-allow-addons":true,"--allow-addons":false,"--no-trace-atomics-wait":true,"--trace-atomics-wait":false,"--no-experimental-detect-module":true,"--experimental-detect-module":false,"--no-cpu-prof":true,"--cpu-prof":false,"--no-experimental-global-webcrypto":false,"--experimental-global-webcrypto":true,"--input-type":"","--no-enable-source-maps":true,"--enable-source-maps":false,"--test-coverage-exclude":[],"--experimental-loader":[],"--no-experimental-fetch":false,"--experimental-fetch":true,"--no-pending-deprecation":true,"--pending-deprecation":false,"--no-tls-min-v1.2":true,"--tls-min-v1.2":false,"--no-watch":true,"--watch":false,"--no-test-force-exit":true,"--test-force-exit":false,"--no-deprecation":false,"--deprecation":true,"--secure-heap-min":2,"--abort-on-uncaught-exception":false,"--no-allow-worker":true,"--allow-worker":false,"--no-print":true,"--print":false,"--no-experimental-strip-types":true,"--experimental-strip-types":false,"--tls-keylog":"","--no-tls-max-v1.2":true,"--tls-max-v1.2":false,"--inspect-publish-uid":"stderr,http","--no-inspect-brk":true,"--inspect-brk":false,"--no-debug-brk":true,"--debug-brk":false,"--no-test":true,"--test":false,"--localstorage-file":"","--import":[],"--no-trace-sigint":true,"--trace-sigint":false,"--no-openssl-shared-config":true,"--openssl-shared-config":false,"--conditions":[],"--no-help":true,"--help":false,"--nohas_eval_string]":true,"[has_eval_string]":false,"--security-revert":[],"--watch-path":[],"--tls-cipher-list":"TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA","--no-interactive":true,"--interactive":false,"--disable-proto":"","--no-zero-fill-buffers":true,"--zero-fill-buffers":false,"--require":[],"--test-shard":"","--no-use-bundled-ca":true,"--use-bundled-ca":false,"--no-experimental-webstorage":true,"--experimental-webstorage":false,"--no-openssl-legacy-provider":true,"--openssl-legacy-provider":false,"--v8-pool-size":4,"--no-force-fips":true,"--force-fips":false,"--no-experimental-shadow-realm":true,"--experimental-shadow-realm":false,"--no-report-exclude-network":true,"--report-exclude-network":false,"--no-disable-wasm-trap-handler":true,"--disable-wasm-trap-handler":false,"--unhandled-rejections":"","--snapshot-blob":"","--trace-event-categories":"","--no-tls-max-v1.3":true,"--tls-max-v1.3":false,"--no-test-udp-no-try-send":true,"--test-udp-no-try-send":false,"--no-completion-bash":true,"--completion-bash":false,"--no-preserve-symlinks":true,"--preserve-symlinks":false,"--no-v8-options":true,"--v8-options":false,"--build-snapshot-config":"","--inspect-port":{"host":"127.0.0.1","port":9229},"--no-addons":false,"--addons":true,"--no-trace-sync-io":true,"--trace-sync-io":false,"--no-debug-arraybuffer-allocations":true,"--debug-arraybuffer-allocations":false,"--no-report-compact":true,"--report-compact":false,"--no-tls-min-v1.3":true,"--tls-min-v1.3":false,"--no-experimental-websocket":false,"--experimental-websocket":true,"--no-enable-fips":true,"--enable-fips":false,"--no-report-on-fatalerror":true,"--report-on-fatalerror":false,"--no-force-async-hooks-checks":false,"--force-async-hooks-checks":true,"--diagnostic-dir":"","--no-experimental-sqlite":true,"--experimental-sqlite":false,"--report-filename":"","--no-experimental-permission":true,"--experimental-permission":false,"--nossl_openssl_cert_store]":true,"[ssl_openssl_cert_store]":false,"--no-tls-min-v1.1":true,"--tls-min-v1.1":false,"--no-experimental-global-navigator":false,"--experimental-global-navigator":true,"--no-warnings":false,"--warnings":true,"--no-verify-base-objects":true,"--verify-base-objects":false,"--use-largepages":"off","--test-reporter":[],"--no-experimental-eventsource":true,"--experimental-eventsource":false,"--secure-heap":0,"--no-experimental-repl-await":false,"--experimental-repl-await":true,"--openssl-config":"","--no-trace-uncaught":true,"--trace-uncaught":false,"--no-network-family-autoselection":false,"--network-family-autoselection":true,"--dns-result-order":"","--no-test-only":true,"--test-only":false,"--report-signal":"SIGUSR2","--report-dir":"","--network-family-autoselection-attempt-timeout":250,"--no-experimental-vm-modules":true,"--experimental-vm-modules":false,"--heap-prof-name":"","--no-version":true,"--version":false,"--no-frozen-intrinsics":true,"--frozen-intrinsics":false,"--no-insecure-http-parser":true,"--insecure-http-parser":false,"--no-watch-preserve-output":true,"--watch-preserve-output":false,"--no-force-node-api-uncaught-exceptions-policy":true,"--force-node-api-uncaught-exceptions-policy":false,"--allow-fs-read":[],"--no-debug":true,"--debug":false,"--no-build-snapshot":true,"--build-snapshot":false,"--no-expose-internals":false,"--expose-internals":true,"--no-track-heap-objects":true,"--track-heap-objects":false,"--disable-warning":[],"--heapsnapshot-near-heap-limit":0,"--title":"","--experimental-default-type":"","--no-experimental-print-required-tla":true,"--experimental-print-required-tla":false,"--no-force-context-aware":true,"--force-context-aware":false,"--no-allow-wasi":true,"--allow-wasi":false,"--no-preserve-symlinks-main":true,"--preserve-symlinks-main":false,"--allow-fs-write":[],"--no-node-snapshot":false,"--node-snapshot":true,"--icu-data-dir":"","--no-trace-deprecation":true,"--trace-deprecation":false,"--eval":"","--cpu-prof-name":"","--no-report-uncaught-exception":true,"--report-uncaught-exception":false,"--no-inspect-wait":true,"--inspect-wait":false,"--no-inspect":true,"--inspect":false,"--no-use-openssl-ca":true,"--use-openssl-ca":false,"--no-experimental-wasm-modules":true,"--experimental-wasm-modules":false,"--no-experimental-require-module":true,"--experimental-require-module":false,"--no-check":true,"--check":false,"--no-global-search-paths":false,"--global-search-paths":true,"--no-experimental-global-customevent":false,"--experimental-global-customevent":true,"--heap-prof-dir":"","--trace-event-file-pattern":"node_trace.${rotation}.log","--test-reporter-destination":[]}},"getCLIOptionsInfo":() => { return {"options":new SafeMap([["--run",{"helpText":"Run a script specified in package.json","envVarSettings":1,"type":5,"defaultIsTrue":false}],["--experimental-sea-config",{"helpText":"Generate a blob that can be embedded into the single executable application","envVarSettings":1,"type":5,"defaultIsTrue":false}],["--extra-info-on-fatal-exception",{"helpText":"hide extra information on fatal exception that causes exit","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--stack-trace-limit",{"helpText":"","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--trace-warnings",{"helpText":"show stack traces on process warnings","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--experimental-test-snapshots",{"helpText":"enable snapshot testing in the test runner","envVarSettings":1,"type":2,"defaultIsTrue":false}],["[has_env_file_string]",{"helpText":"","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--prof-process",{"helpText":"process V8 profiler output generated using --prof","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--trace-tls",{"helpText":"prints TLS packet trace information to stderr","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--trace-exit",{"helpText":"show stack trace when an environment exits","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--throw-deprecation",{"helpText":"throw an exception on deprecations","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--tls-min-v1.0",{"helpText":"set default TLS minimum to TLSv1.0 (default: TLSv1.2)","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--inspect-brk-node",{"helpText":"","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--test-name-pattern",{"helpText":"run tests whose name matches this regular expression","envVarSettings":1,"type":7,"defaultIsTrue":false}],["--experimental-test-module-mocks",{"helpText":"enable module mocking in the test runner","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--experimental-test-coverage",{"helpText":"enable code coverage in the test runner","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--test-update-snapshots",{"helpText":"regenerate test snapshots","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--test-timeout",{"helpText":"specify test runner timeout","envVarSettings":1,"type":4,"defaultIsTrue":false}],["--test-concurrency",{"helpText":"specify test runner concurrency","envVarSettings":1,"type":4,"defaultIsTrue":false}],["--max-http-header-size",{"helpText":"set the maximum size of HTTP headers (default: 16384 (16KB))","envVarSettings":0,"type":4,"defaultIsTrue":false}],["--redirect-warnings",{"helpText":"write warnings to file instead of stderr","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--heap-prof",{"helpText":"Start the V8 heap profiler on start up, and write the heap profile to disk before exit. If --heap-prof-dir is not specified, write the profile to the current working directory.","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--test-coverage-include",{"helpText":"include files in coverage report that match this glob pattern","envVarSettings":0,"type":7,"defaultIsTrue":false}],["--env-file",{"helpText":"set environment variables from supplied file","envVarSettings":1,"type":5,"defaultIsTrue":false}],["--experimental-network-inspection",{"helpText":"experimental network inspection support","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--cpu-prof-dir",{"helpText":"Directory where the V8 profiles generated by --cpu-prof will be placed. Does not affect --prof.","envVarSettings":1,"type":5,"defaultIsTrue":false}],["--report-on-signal",{"helpText":"generate diagnostic report upon receiving signals","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--heap-prof-interval",{"helpText":"specified sampling interval in bytes for the V8 heap profile generated with --heap-prof. (default: 512 * 1024)","envVarSettings":1,"type":4,"defaultIsTrue":false}],["--cpu-prof-interval",{"helpText":"specified sampling interval in microseconds for the V8 CPU profile generated with --cpu-prof. (default: 1000)","envVarSettings":1,"type":4,"defaultIsTrue":false}],["--allow-child-process",{"helpText":"allow use of child process when any permissions are set","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--trace-promises",{"helpText":"show stack traces on promise initialization and resolution","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--experimental-import-meta-resolve",{"helpText":"experimental ES Module import.meta.resolve() parentURL support","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--experimental-abortcontroller",{"helpText":"","envVarSettings":0,"type":0,"defaultIsTrue":false}],["--test-skip-pattern",{"helpText":"run tests whose name do not match this regular expression","envVarSettings":1,"type":7,"defaultIsTrue":false}],["--experimental-report",{"helpText":"","envVarSettings":0,"type":0,"defaultIsTrue":false}],["--experimental-modules",{"helpText":"","envVarSettings":0,"type":0,"defaultIsTrue":false}],["--heapsnapshot-signal",{"helpText":"Generate heap snapshot on specified signal","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--allow-addons",{"helpText":"allow use of addons when any permissions are set","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--trace-atomics-wait",{"helpText":"(deprecated) trace Atomics.wait() operations","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--experimental-detect-module",{"helpText":"when ambiguous modules fail to evaluate because they contain ES module syntax, try again to evaluate them as ES modules","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--cpu-prof",{"helpText":"Start the V8 CPU profiler on start up, and write the CPU profile to disk before exit. If --cpu-prof-dir is not specified, write the profile to the current working directory.","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--experimental-global-webcrypto",{"helpText":"expose experimental Web Crypto API on the global scope","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--input-type",{"helpText":"set module type for string input","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--jitless",{"helpText":"disable runtime allocation of executable memory","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--enable-source-maps",{"helpText":"Source Map V3 support for stack traces","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--test-coverage-exclude",{"helpText":"exclude files from coverage report that match this glob pattern","envVarSettings":0,"type":7,"defaultIsTrue":false}],["--experimental-loader",{"helpText":"use the specified module as a custom loader","envVarSettings":0,"type":7,"defaultIsTrue":false}],["--expose-gc",{"helpText":"expose gc extension","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--http-parser",{"helpText":"","envVarSettings":0,"type":0,"defaultIsTrue":false}],["--experimental-fetch",{"helpText":"experimental Fetch API","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--pending-deprecation",{"helpText":"emit pending deprecation warnings","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--tls-min-v1.2",{"helpText":"set default TLS minimum to TLSv1.2 (default: TLSv1.2)","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--watch",{"helpText":"run in watch mode","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--test-force-exit",{"helpText":"force test runner to exit upon completion","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--deprecation",{"helpText":"silence deprecation warnings","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--secure-heap-min",{"helpText":"minimum allocation size from the OpenSSL secure heap","envVarSettings":0,"type":3,"defaultIsTrue":false}],["--abort-on-uncaught-exception",{"helpText":"aborting instead of exiting causes a core file to be generated for analysis","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--allow-worker",{"helpText":"allow worker threads when any permissions are set","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--print",{"helpText":"evaluate script and print result","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--experimental-strip-types",{"helpText":"Experimental type-stripping for TypeScript files.","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--napi-modules",{"helpText":"","envVarSettings":0,"type":0,"defaultIsTrue":false}],["--tls-keylog",{"helpText":"log TLS decryption keys to named file for traffic analysis","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--tls-max-v1.2",{"helpText":"set default TLS maximum to TLSv1.2 (default: TLSv1.3)","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--inspect-publish-uid",{"helpText":"comma separated list of destinations for inspector uid(default: stderr,http)","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--inspect-brk",{"helpText":"activate inspector on host:port and break at start of user script","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--debug-brk",{"helpText":"","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--test",{"helpText":"launch test runner on startup","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--localstorage-file",{"helpText":"file used to persist localStorage data","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--import",{"helpText":"ES module to preload (option can be repeated)","envVarSettings":0,"type":7,"defaultIsTrue":false}],["--trace-sigint",{"helpText":"enable printing JavaScript stacktrace on SIGINT","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--experimental-json-modules",{"helpText":"","envVarSettings":0,"type":0,"defaultIsTrue":false}],["--openssl-shared-config",{"helpText":"enable OpenSSL shared configuration","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--conditions",{"helpText":"additional user conditions for conditional exports and imports","envVarSettings":0,"type":7,"defaultIsTrue":false}],["--help",{"helpText":"print node command line options","envVarSettings":1,"type":2,"defaultIsTrue":false}],["[has_eval_string]",{"helpText":"","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--security-revert",{"helpText":"","envVarSettings":1,"type":7,"defaultIsTrue":false}],["--watch-path",{"helpText":"path to watch","envVarSettings":0,"type":7,"defaultIsTrue":false}],["--tls-cipher-list",{"helpText":"use an alternative default TLS cipher list","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--interactive",{"helpText":"always enter the REPL even if stdin does not appear to be a terminal","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--experimental-wasi-unstable-preview1",{"helpText":"","envVarSettings":0,"type":0,"defaultIsTrue":false}],["--disable-proto",{"helpText":"disable Object.prototype.__proto__","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--zero-fill-buffers",{"helpText":"automatically zero-fill all newly allocated Buffer and SlowBuffer instances","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--require",{"helpText":"CommonJS module to preload (option can be repeated)","envVarSettings":0,"type":7,"defaultIsTrue":false}],["--test-shard",{"helpText":"run test at specific shard","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--experimental-worker",{"helpText":"","envVarSettings":0,"type":0,"defaultIsTrue":false}],["--use-bundled-ca",{"helpText":"use bundled CA store (default)","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--experimental-top-level-await",{"helpText":"","envVarSettings":0,"type":0,"defaultIsTrue":false}],["--experimental-webstorage",{"helpText":"experimental Web Storage API","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--openssl-legacy-provider",{"helpText":"enable OpenSSL 3.0 legacy provider","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--v8-pool-size",{"helpText":"set V8's thread pool size","envVarSettings":0,"type":3,"defaultIsTrue":false}],["--force-fips",{"helpText":"force FIPS crypto (cannot be disabled)","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--experimental-shadow-realm",{"helpText":"","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--report-exclude-network",{"helpText":"exclude network interface diagnostics. (default: false)","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--disable-wasm-trap-handler",{"helpText":"Disable trap-handler-based WebAssembly bound checks. V8 will insert inline bound checks when compiling WebAssembly which may slow down performance.","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--unhandled-rejections",{"helpText":"define unhandled rejections behavior. Options are 'strict' (always raise an error), 'throw' (raise an error unless 'unhandledRejection' hook is set), 'warn' (log a warning), 'none' (silence warnings), 'warn-with-error-code' (log a warning and set exit code 1 unless 'unhandledRejection' hook is set). (default: throw)","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--snapshot-blob",{"helpText":"Path to the snapshot blob that's either the result of snapshotbuilding, or the blob that is used to restore the application state","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--trace-event-categories",{"helpText":"comma separated list of trace event categories to record","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--tls-max-v1.3",{"helpText":"set default TLS maximum to TLSv1.3 (default: TLSv1.3)","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--test-udp-no-try-send",{"helpText":"","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--completion-bash",{"helpText":"print source-able bash completion script","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--preserve-symlinks",{"helpText":"preserve symbolic links when resolving","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--v8-options",{"helpText":"print V8 command line options","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--build-snapshot-config",{"helpText":"Generate a snapshot blob when the process exits using aJSON configuration in the specified path.","envVarSettings":1,"type":5,"defaultIsTrue":false}],["--inspect-port",{"helpText":"set host:port for inspector","envVarSettings":0,"type":6,"defaultIsTrue":false}],["--addons",{"helpText":"disable loading native addons","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--node-memory-debug",{"helpText":"Run with extra debug checks for memory leaks in Node.js itself","envVarSettings":0,"type":0,"defaultIsTrue":false}],["--experimental-specifier-resolution",{"helpText":"","envVarSettings":0,"type":0,"defaultIsTrue":false}],["--trace-sync-io",{"helpText":"show stack trace when use of sync IO is detected after the first tick","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--debug-arraybuffer-allocations",{"helpText":"","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--report-compact",{"helpText":"output compact single-line JSON","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--tls-min-v1.3",{"helpText":"set default TLS minimum to TLSv1.3 (default: TLSv1.2)","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--experimental-websocket",{"helpText":"experimental WebSocket API","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--enable-fips",{"helpText":"enable FIPS crypto at startup","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--report-on-fatalerror",{"helpText":"generate diagnostic report on fatal (internal) errors","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--force-async-hooks-checks",{"helpText":"disable checks for async_hooks","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--diagnostic-dir",{"helpText":"set dir for all output files (default: current working directory)","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--experimental-sqlite",{"helpText":"experimental node:sqlite module","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--report-filename",{"helpText":"define custom report file name. (default: YYYYMMDD.HHMMSS.PID.SEQUENCE#.txt)","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--experimental-permission",{"helpText":"enable the permission system","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--interpreted-frames-native-stack",{"helpText":"help system profilers to translate JavaScript interpreted frames","envVarSettings":0,"type":1,"defaultIsTrue":false}],["[ssl_openssl_cert_store]",{"helpText":"","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--tls-min-v1.1",{"helpText":"set default TLS minimum to TLSv1.1 (default: TLSv1.2)","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--experimental-global-navigator",{"helpText":"expose experimental Navigator API on the global scope","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--warnings",{"helpText":"silence all process warnings","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--verify-base-objects",{"helpText":"","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--use-largepages",{"helpText":"Map the Node.js static code to large pages. Options are 'off' (the default value, meaning do not map), 'on' (map and ignore failure, reporting it to stderr), or 'silent' (map and silently ignore failure)","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--test-reporter",{"helpText":"report test output using the given reporter","envVarSettings":0,"type":7,"defaultIsTrue":false}],["--experimental-eventsource",{"helpText":"experimental EventSource API","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--secure-heap",{"helpText":"total size of the OpenSSL secure heap","envVarSettings":0,"type":3,"defaultIsTrue":false}],["--experimental-repl-await",{"helpText":"experimental await keyword support in REPL","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--openssl-config",{"helpText":"load OpenSSL configuration from the specified file (overrides OPENSSL_CONF)","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--trace-uncaught",{"helpText":"show stack traces for the `throw` behind uncaught exceptions","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--network-family-autoselection",{"helpText":"Disable network address family autodetection algorithm","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--dns-result-order",{"helpText":"set default value of verbatim in dns.lookup. Options are 'ipv4first' (IPv4 addresses are placed before IPv6 addresses) 'ipv6first' (IPv6 addresses are placed before IPv4 addresses) 'verbatim' (addresses are in the order the DNS resolver returned)","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--test-only",{"helpText":"run tests with 'only' option set","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--report-signal",{"helpText":"causes diagnostic report to be produced on provided signal, unsupported in Windows. (default: SIGUSR2)","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--report-dir",{"helpText":"define custom report pathname. (default: current working directory)","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--network-family-autoselection-attempt-timeout",{"helpText":"Sets the default value for the network family autoselection attempt timeout.","envVarSettings":0,"type":4,"defaultIsTrue":false}],["--experimental-vm-modules",{"helpText":"experimental ES Module support in vm module","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--heap-prof-name",{"helpText":"specified file name of the V8 heap profile generated with --heap-prof","envVarSettings":1,"type":5,"defaultIsTrue":false}],["--version",{"helpText":"print Node.js version","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--frozen-intrinsics",{"helpText":"experimental frozen intrinsics support","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--harmony-shadow-realm",{"helpText":"","envVarSettings":1,"type":1,"defaultIsTrue":false}],["--insecure-http-parser",{"helpText":"use an insecure HTTP parser that accepts invalid HTTP headers","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--watch-preserve-output",{"helpText":"preserve outputs on watch mode restart","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--force-node-api-uncaught-exceptions-policy",{"helpText":"enforces 'uncaughtException' event on Node API asynchronous callbacks","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--allow-fs-read",{"helpText":"allow permissions to read the filesystem","envVarSettings":0,"type":7,"defaultIsTrue":false}],["--debug",{"helpText":"","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--build-snapshot",{"helpText":"Generate a snapshot blob when the process exits.","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--expose-internals",{"helpText":"","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--track-heap-objects",{"helpText":"track heap object allocations for heap snapshots","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--disable-warning",{"helpText":"silence specific process warnings","envVarSettings":0,"type":7,"defaultIsTrue":false}],["--heapsnapshot-near-heap-limit",{"helpText":"Generate heap snapshots whenever V8 is approaching the heap limit. No more than the specified number of heap snapshots will be generated.","envVarSettings":0,"type":3,"defaultIsTrue":false}],["--title",{"helpText":"the process title to use on startup","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--disallow-code-generation-from-strings",{"helpText":"disallow eval and friends","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--experimental-default-type",{"helpText":"set module system to use by default","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--perf-basic-prof-only-functions",{"helpText":"","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--experimental-print-required-tla",{"helpText":"Print pending top-level await. If --experimental-require-module is true, evaluate asynchronous graphs loaded by `require()` but do not run the microtasks, in order to to find and print top-level await in the graph","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--max-semi-space-size",{"helpText":"","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--force-context-aware",{"helpText":"disable loading non-context-aware addons","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--perf-prof-unwinding-info",{"helpText":"","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--allow-wasi",{"helpText":"allow wasi when any permissions are set","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--preserve-symlinks-main",{"helpText":"preserve symbolic links when resolving the main module","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--allow-fs-write",{"helpText":"allow permissions to write in the filesystem","envVarSettings":0,"type":7,"defaultIsTrue":false}],["--node-snapshot",{"helpText":"","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--icu-data-dir",{"helpText":"set ICU data load path to dir (overrides NODE_ICU_DATA) (note: linked-in ICU data is present)","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--huge-max-old-generation-size",{"helpText":"increase default maximum heap size on machines with 16GB memory or more","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--trace-deprecation",{"helpText":"show stack traces on deprecations","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--eval",{"helpText":"evaluate script","envVarSettings":1,"type":5,"defaultIsTrue":false}],["--cpu-prof-name",{"helpText":"specified file name of the V8 CPU profile generated with --cpu-prof","envVarSettings":1,"type":5,"defaultIsTrue":false}],["--report-uncaught-exception",{"helpText":"generate diagnostic report on uncaught exceptions","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--enable-etw-stack-walking",{"helpText":"provides heap data to ETW Windows native tracing","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--perf-basic-prof",{"helpText":"","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--max-old-space-size",{"helpText":"","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--inspect-wait",{"helpText":"activate inspector on host:port and wait for debugger to be attached","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--perf-prof",{"helpText":"","envVarSettings":0,"type":1,"defaultIsTrue":false}],["--inspect",{"helpText":"activate inspector on host:port (default: 127.0.0.1:9229)","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--use-openssl-ca",{"helpText":"use OpenSSL's default CA store","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--experimental-wasm-modules",{"helpText":"experimental ES Module support for webassembly modules","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--experimental-require-module",{"helpText":"Allow loading explicit ES Modules in require().","envVarSettings":0,"type":2,"defaultIsTrue":false}],["--check",{"helpText":"syntax check script without executing","envVarSettings":1,"type":2,"defaultIsTrue":false}],["--prof",{"helpText":"Generate V8 profiler output.","envVarSettings":1,"type":1,"defaultIsTrue":false}],["--global-search-paths",{"helpText":"disable global module search paths","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--experimental-global-customevent",{"helpText":"expose experimental CustomEvent on the global scope","envVarSettings":0,"type":2,"defaultIsTrue":true}],["--heap-prof-dir",{"helpText":"Directory where the V8 heap profiles generated by --heap-prof will be placed.","envVarSettings":1,"type":5,"defaultIsTrue":false}],["--trace-event-file-pattern",{"helpText":"Template string specifying the filepath for the trace-events data, it supports ${rotation} and ${pid}.","envVarSettings":0,"type":5,"defaultIsTrue":false}],["--test-reporter-destination",{"helpText":"report given reporter to the given destination","envVarSettings":0,"type":7,"defaultIsTrue":false}]]),"aliases":new SafeMap([["--debug-port",["--inspect-port"]],["--inspect=",["--inspect-port","--inspect"]],["-i",["--interactive"]],["--debug=",["--debug"]],["--debug-brk=",["--debug-brk"]],["-e",["--eval"]],["--inspect-brk=",["--inspect-port","--inspect-brk"]],["--inspect-wait=",["--inspect-port","--inspect-wait"]],["-C",["--conditions"]],["-pe",["--print","--eval"]],["--enable-network-family-autoselection",["--network-family-autoselection"]],["--prof-process",["--prof-process","--"]],["--loader",["--experimental-loader"]],["--inspect-brk-node=",["--inspect-port","--inspect-brk-node"]],["-c",["--check"]],["-r",["--require"]],["--print <arg>",["-pe"]],["--trace-events-enabled",["--trace-event-categories","v8,node,node.async_hooks"]],["-v",["--version"]],["--security-reverts",["--security-revert"]],["--es-module-specifier-resolution",["--experimental-specifier-resolution"]],["-h",["--help"]],["-p",["--print"]],["--report-directory",["--report-dir"]]])}},"getEmbedderOptions":() => { return {"shouldNotRegisterESMLoader":false,"noGlobalSearchPaths":false,"noBrowserGlobals":false,"hasEmbedderPreload":false}},"envSettings":{"kAllowedInEnvvar":0,"kDisallowedInEnvvar":1},"types":{"kNoOp":0,"kV8Option":1,"kBoolean":2,"kInteger":3,"kUInteger":4,"kString":5,"kHostPort":6,"kStringList":7}};
var string_decoder = {
  kIncompleteCharactersStart: 0,
  kIncompleteCharactersEnd: 4,
  kMissingBytes: 4,
  kBufferedBytes: 5,
  kEncodingField: 6,
  kNumFields: 7,
  encodings: [
    "ascii",
    "utf8",
    "base64",
    "utf16le",
    "latin1",
    "hex",
    "buffer",
    "base64url",
  ],
  kSize: 7,
};
var worker = {
  Worker: () => {},
  getEnvMessagePort: () => {},
  threadId: 0,
  isMainThread: true,
  ownsProcessState: true,
  kMaxYoungGenerationSizeMb: 0,
  kMaxOldGenerationSizeMb: 1,
  kCodeRangeSizeMb: 2,
  kStackSizeMb: 3,
  kTotalResourceLimitCount: 4,
};
var buffer = {"kMaxLength":9007199254740991,"kStringMaxLength":536870888};
preformanceDUMP.milestones = new Float64Array(preformanceDUMP.milestones);
var bindings = {
  uv: {
    errname: function errname(num) {
      const theCodes = uvDUMP.codeDump;
      if (num in theCodes) {
        return theCodes[num];
      } else {
        return `Unknown system error ${num}`;
      }
    },
    ...uvDUMP,
  },
  util: require("./bindings/util.js"),
  types: require("./bindings/types.js"),
  symbols: symbolDUMP,
  constants,
  performance: {
    //Simple fake value
    now: function now() {
      return 56212.742949;
    },
    ...preformanceDUMP,
  },
  builtins: {
    builtinIds: builtinIdsDUMP,
  },
  options: optionsDump,
  string_decoder,
  worker,
  buffer,
  config:{
    isDebugBuild: false,
    hasOpenSSL: false,
    fipsMode: false,
    hasIntl: false,
    hasTracing: true,
    hasNodeOptions: true,
    hasInspector: false,
    noBrowserGlobals: false,
    bits: 64,
    language: 'en-US'
  },
  // A hack to use debuglog ( Debug log needs internalBinding before it is loaded and internalBinding needs debuglog to be loaded to log. Solution: buffer all debug messages and print them when debug log finishes loading. )
  internal_fJ31hrh: () => {
    debugLog = require("./util/debuglog").debuglog(
      "internalBinding (patch)",
      (debugFunction) => {
        debugLog = debugFunction;
      }
    );
    while (quote.length !== 0) {
      debugLog(...quote.shift());
    }
    loaded = true;
  },
};
// Lasy-load to avoid circular dependency
Object.defineProperty(bindings, "messaging", {
  get() {
    return require("./per_context/domexception.js");
  },
});
const recursiveBlankProxy = new Proxy(
  {},
  {
    get() {
      return recursiveBlankProxy;
    },
  }
);

function safeBindingHandler(value, path) {
  return new Proxy(value, {
    get(target, p) {
      if (typeof target[p] == "undefined") {
        debug(
          `attempted to acess nonexsistent prop ${p} of binding ${path}, returning blank proxy.`
        );
        return recursiveBlankProxy;
      } else {
        var value = target[p];
        if (typeof value === "object") {
          return safeBindingHandler(value, `${path}.${p}`);
        } else {
          //debug(`Got ${path}.${p}`);
          return value;
        }
      }
    },
    // Make binding editable
    // I don't see this being used in node.js source code, but I might as well have the same behavor.
    set(_t, prop, val) {
      var path = prop.split(".");
      var temp = bindings;
      // No need to check if the values exsist because they have already been checked
      while (path.length !== 0) {
        temp = temp[path.shift()];
      }
      temp[prop] = val;
      return true;
    },
  });
}

module.exports = function internalBinding(id) {
  // Get a fake internal binding
  if (id in bindings) {
    return safeBindingHandler(bindings[id], id);
  } else {
    // Hope it dosen't get used <:(
    debug(`binding ${id} not found`);
    return recursiveBlankProxy;
  }
};
// TODO: add these to builder
/*
How to dump UV
Run this:
var uv = process.binding("uv");
var generated = uv;
// All codes are negative, so arrays won't work
generated.codeDump = {};
for (let index = -1; index > -200; index--) {
    var code = uv.errname(index);
    if(!code.startsWith("Unknown system error")){
        generated.codeDump[index] = code
    }
}
console.log(JSON.stringify(generated));

And Paste the result into the UVDUMP varable
*/

/*
How to dump symbols
!!Run node with --expose-internals flag!!

const { internalBinding } = require('./test/binding');
var symbols = internalBinding("symbols");
symbols.toJSON = function(){
    return Object.fromEntries(Object.entries(this).filter(([k,v]) => typeof v == "symbol").map(([key,v]) => [key,v.toString().replace(/(?<=Symbol\()(?<!Symbol\(.+)|(?=\))(?!.+\))/g,"\"")]));
};
console.log(JSON.stringify(symbols).replaceAll("\\","").replace(/(?<="\))"|"(?=Symbol\(")/gm,""));
*/
/*
How to DUMP constants ( VERY easy )
set constants to 
console.log(JSON.stringify(process.binding("constants")));
*/
/* 
How to DUMP preformance.
This is a bit trickyer, as it has many "live" values. As a simple patch, this will just dump constants and milestones.
!!Run node with --expose-internals flag!!
var { internalBinding } = require('./test/binding');
var preformance = internalBinding("performance");
var props = Object.fromEntries(["milestones","constants"].map(name => [name,preformance[name]]));
props.milestones = [].slice.call(props.milestones);
console.log(JSON.stringify(props));
*/
/* 
How to DUMP builtins
The builtins are HUGE, so only the nessisary portion is dumped
!!Run node with --expose-internals flag!!
var { internalBinding } = require('./test/binding');
var builtins = internalBinding("builtins");
console.log(JSON.stringify(builtins.builtinIds));
// Pase into builtinIdsDUMP varable
*/
/*How to DUMP options
( Sets all options to defaults )
!!Run node with --expose-internals flag!!
var { internalBinding, primordials: { SafeMap } } = require('./test/binding');
const clipboard = await import('clipboardy');
var options = internalBinding('options');
var allFunctions = Object.fromEntries(Object.entries(options).filter(([key,value]) => typeof value === "function").map(([key,value]) => [key,value()]));
// Make all options default
if(allFunctions.getCLIOptions){
  allFunctions.getCLIOptions.options = new SafeMap([...allFunctions.getCLIOptions.options].map(([key,value]) => [key,{...value,value:key === "--expose-internals" ? false : value.value}]));
}else{
  allFunctions.getCLIOptionsInfo = allFunctions.getCLIOptionsInfo();
  allFunctions.getCLIOptionsValues = new SafeMap([...allFunctions.getCLIOptionsValues()].map(([key,value]) => key === "--expose-internals" ? [key,false] : [key,value]));
}
var stringify = (val) => JSON.stringify(val,(key,value) => value instanceof SafeMap ? "%new SafeMap(" + JSON.stringify([...value]) + ")%": value);
var fix = (v) => v.replace(/(?<="%.*)\\(?=.*%")|("%|%")|\\(?!\\)/gm,"");
Object.keys(allFunctions).forEach(k => allFunctions[k] = "%() => { return " + fix(stringify(allFunctions[k])) + "}%")
var notFunctions = Object.fromEntries(Object.entries(options).filter(([_key,value]) => typeof value !== "function"));
var stringifyed = fix(stringify({...allFunctions,...notFunctions}))
await clipboard.default.write(stringifyed);
// The dumped options will be in your clipboard.
*/

/*
How to DUMP string_decoder
!!Run node with --expose-internals flag!!
var { internalBinding } = require('internal/test/binding');
var decoder = internalBinding("string_decoder");
console.log(JSON.stringify(decoder));
*/
/* 
How to DUMP worker
!!Run node with --expose-internals flag!!
var { internalBinding } = require('internal/test/binding');
var worker = internalBinding("worker");
var fix = (v) => v.replace(/(?<="%.*)\\(?=.*%")|("%|%")|\\(?!\\)/gm,"");
// Make all functions no-ops
console.log(fix(JSON.stringify(worker,(key,value) => typeof value === "function" ? "%() => {}%" : value)))
*/
/* 
How to DUMP buffer
!!Run node with --expose-internals flag!!
var { internalBinding } = require('internal/test/binding');
var buffer = internalBinding('buffer');
console.log(JSON.stringify(buffer))
*/