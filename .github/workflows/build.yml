name: Nightly build
"on":
  schedule:
    - cron: 00 0 * * *
  push:
    branches:
      - nightly-build
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - name: Use Node.js v20
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: npm
      - run: npm ci
      - run: npm run build --if-present -- --token ${{ secrets.GITHUB_TOKEN }}
      - run: npm test --if-present
      - name: Create out dir
        run: mkdir out
      - name: Pack
        run: npm pack --pack-destination out
      - name: Get version name
        id: getv
        uses: juliangruber/read-file-action@v1
        with:
          path: ./version.txt
      - name: Echo version name
        run: echo "${{ steps.getv.outputs.content }}"
      - name: Add version to RUN_NUMBERS if non-exsistent
        env:
          version: steps.getv.outputs.content
        run: |
            if [[ $RUN_NUMBERS != *"$version"* ]]; then
            echo "RUN_NUMBERS=${version}:0" >> "$GITHUB_ENV"
            fi
      - name: Bump version
        run: |
          out=$(node -e 'process.stdout.write("${{env.RUN_NUMBERS}}".split("\n").map(v => {var sp = v.split(":"); return sp[0] == "${{steps.getv.outputs.content}}" ? [sp[0],sp[1] + 1].join(":") : v;}).join("\n"))')
          echo "RUN_NUMBERS=${out}" >> $GITHUB_ENV
      - name: Get version
        id: ver
        run: |
          version=$((grep v20 <<< $RUN_NUMBERS) | cut -d ":" -f2-)
          echo "version=${version}" >> $GITHUB_OUTPUT
      - name: Create a release
        id: new_release
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ steps.getv.outputs.content }}build${{ steps.ver.outputs.version }}"
          name: "Release nightly #${{ github.run_number }}"
          body: |
            A untested nightly release
            - For testing
          prerelease: true
          artifacts: "out/*"
