name: Nightly build
"on":
  schedule:
    - cron: '0 0 * * fri'
  push:
    branches:
      - nightly-build
jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - name: Use Node.js v20
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: npm
      - run: npm ci
      - run: npm run build --if-present -- --token ${{ secrets.GITHUB_TOKEN }}
      - run: npm test --if-present
      - name: Create out dir
        run: mkdir out
      - name: Get version name
        id: getv
        uses: juliangruber/read-file-action@v1
        with:
          path: ./version.txt
      - name: Echo version name
        run: echo "${{ steps.getv.outputs.content }}"
#      - name: Modify README.md - set version
#        uses: jaywcjlove/github-action-modify-file-content@main
#        with:
#          path: README.md
#          body: "${{ steps.getv.outputs.content }}"
#          openDelimiter: "<!--VER-->"
#          closeDelimiter: "<!--VER-END-->"
      - name: Modify README.md - set version
        run: |
          newVal='${{ steps.getv.outputs.content }}'
          node -e "const fs = require('fs');const pathTo = './README.md';const delimiters = ['<!--VER-->','<!--VER-END-->'];const replacer = new RegExp('(?<=' + delimiters[0] + ')(.|\n)*(?=' + delimiters[1] + ')','gm');const old = fs.readFileSync(pathTo).toString();fs.writeFileSync(pathTo,old.replace(replacer,'${newVal}'))"
      - name: Pack
        run: npm pack --pack-destination out
      - name: Get version data
        id: getdat
        uses: jaywcjlove/github-action-read-file@main
        with:
          branch: nightly-build
          path: data.json
      - name: Get releace id
        id: release
        run: |
          json=$(tr -d '\n' <<< '${{ steps.getdat.outputs.content }}')
          out=$(node -e "var parsed = JSON.parse('${json}'); var ver = '${{steps.getv.outputs.content}}'; if(typeof parsed[ver] == 'undefined'){parsed[ver] = 0} parsed[ver]++; process.stdout.write(parsed[ver] + '|' + JSON.stringify(parsed));")
          IFS='|' read -ra split <<< "$out"
          echo "runNumbers=${split[1]}" >> $GITHUB_OUTPUT
          echo "version=${split[0]}" >> $GITHUB_OUTPUT
      - name: Write version data to data.json
        uses: jaywcjlove/github-action-modify-file-content@main
        with:
          branch: nightly-build
          ref: "${{ github.ref }}"
          path: data.json
          body: "${{ steps.release.outputs.runNumbers }}"
          overwrite: 'true'
          message: 'Release: update data.json'
      - name: Create a release
        id: new_release
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ steps.getv.outputs.content }}build${{ steps.release.outputs.version }}"
          name: "Release nightly #${{ steps.release.outputs.version }}"
          body: |
            A untested nightly release
            - For testing
          prerelease: true
          artifacts: "out/*"
